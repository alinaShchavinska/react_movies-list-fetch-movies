{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","searchString","a","fetch","then","response","json","FindMovie","onAdd","useState","title","setTitle","setMovie","needShowError","setNeedShowError","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","foundMovie","Error","App","state","addMovie","find","m","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53971f3f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const OMDB_API = 'https://www.omdbapi.com/?i=tt3896198&apikey=b2b9c7f0';\n\nexport const getMovie = async (searchString: string) => {\n  return fetch(`${OMDB_API}&t=${searchString}`)\n    .then(response => response.json());\n};\n","/* eslint-disable no-alert */\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype OnAdd = (movie: Movie) => void;\n\ntype Props = {\n  onAdd: OnAdd,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [needShowError, setNeedShowError] = useState(false);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => {\n          event.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={`input ${needShowError ? 'is-danger' : ''}`}\n                value={title}\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                  setNeedShowError(false);\n                }}\n              />\n            </div>\n          </label>\n          {\n            needShowError\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={async () => {\n                if (title === '') {\n                  return;\n                }\n\n                const foundMovie = await getMovie(title);\n\n                if (foundMovie.Error) {\n                  setNeedShowError(true);\n                  setMovie(null);\n                } else {\n                  setNeedShowError(false);\n                  setMovie(foundMovie);\n                }\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={async () => {\n                if (movie !== null) {\n                  onAdd(movie);\n                  setTitle('');\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addMovie = (movie: Movie) => {\n    if (this.state.movies.find(m => m.imdbID === movie.imdbID)) {\n      return;\n    }\n\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}